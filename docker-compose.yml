version: '3.8'

services:
  frontend:
    build: ./frontend
    depends_on:
      - backend
    ports:
      - "3000:3000"
    networks:
      - mynetwork

  backend:
    build: ./backend
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
#      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/accommodationbase
      SPRING_DATASOURCE_URL: jdbc:postgresql://host.docker.internal:5432/accommodationbase
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres123
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
    networks:
      - mynetwork

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: accommodationbase
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres123
    volumes:
      - db_data:/var/lib/postgresql/data

    networks:
      - mynetwork
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mynetwork:
    driver: bridge

volumes:
  db_data:

